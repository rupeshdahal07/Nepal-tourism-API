# Generated by Django 5.2 on 2025-05-07 02:40

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('license_id', models.CharField(max_length=50, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('regions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('services', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='agencies/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('organization', models.CharField(blank=True, max_length=100)),
                ('tier', models.CharField(choices=[('free', 'Free'), ('pro', 'Pro'), ('enterprise', 'Enterprise')], default='free', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('city', 'City'), ('trek', 'Trek'), ('heritage', 'Heritage Site'), ('park', 'National Park')], max_length=20)),
                ('region', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('difficulty', models.CharField(blank=True, choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('hard', 'Hard')], max_length=20, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in days', null=True)),
                ('max_elevation', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('min_elevation', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('best_season', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('permits_required', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('highlights', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('cultural', 'Cultural'), ('religious', 'Religious'), ('adventure', 'Adventure'), ('food', 'Food'), ('music', 'Music')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('city', models.CharField(max_length=50)),
                ('venue', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('description', models.TextField()),
                ('significance', models.TextField(blank=True)),
                ('activities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('license_id', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), size=None)),
                ('regions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('experience_years', models.PositiveIntegerField()),
                ('specialization', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('photo', models.ImageField(blank=True, null=True, upload_to='guides/')),
                ('available', models.BooleanField(default=True)),
                ('daily_rate', models.PositiveIntegerField(help_text='Daily rate in NPR')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IssuingOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('hours', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('regions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('required_documents', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('application_process', models.TextField()),
                ('online_application', models.URLField(blank=True)),
                ('validity', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrailSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('open', 'Open'), ('caution', 'Caution'), ('closed', 'Closed')], max_length=20)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TrailStatus',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('open', 'Open'), ('caution', 'Caution'), ('closed', 'Closed')], max_length=20)),
                ('source', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('elevation', models.IntegerField(help_text='Elevation in meters')),
                ('timestamp', models.DateTimeField()),
                ('temperature', models.IntegerField(help_text='Temperature in celsius')),
                ('feels_like', models.IntegerField(help_text='Feels like temperature in celsius')),
                ('condition', models.CharField(max_length=50)),
                ('wind_speed', models.IntegerField(help_text='Wind speed in km/h')),
                ('wind_direction', models.CharField(max_length=2)),
                ('precipitation', models.DecimalField(decimal_places=1, help_text='Precipitation in mm', max_digits=5)),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('pressure', models.IntegerField(help_text='Pressure in hPa')),
                ('visibility', models.IntegerField(help_text='Visibility in meters')),
                ('uv_index', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AgencyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.agency')),
            ],
        ),
        migrations.CreateModel(
            name='DestinationPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='destinations/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.destination')),
            ],
        ),
        migrations.CreateModel(
            name='EventLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='api.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='events/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.event')),
            ],
        ),
        migrations.CreateModel(
            name='GuideReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.guide')),
            ],
        ),
        migrations.CreateModel(
            name='Lodging',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=uuid.uuid4, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('hotel', 'Hotel'), ('guesthouse', 'Guesthouse'), ('teahouse', 'Teahouse'), ('lodge', 'Lodge')], max_length=20)),
                ('place', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('min_price', models.PositiveIntegerField(help_text='Minimum price in NPR')),
                ('max_price', models.PositiveIntegerField(help_text='Maximum price in NPR')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('booking_link', models.URLField(blank=True)),
                ('availability', models.BooleanField(default=True)),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lodgings', to='api.destination')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LodgingPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='lodgings/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('lodging', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.lodging')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(max_length=50)),
                ('price', models.PositiveIntegerField(help_text='Price in NPR')),
                ('capacity', models.PositiveIntegerField(default=2)),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('lodging', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='api.lodging')),
            ],
        ),
        migrations.CreateModel(
            name='TourismStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField(blank=True, null=True)),
                ('total_arrivals', models.IntegerField()),
                ('year_over_year', models.DecimalField(blank=True, decimal_places=2, help_text='Year-over-year growth percentage', max_digits=5, null=True)),
                ('fastest_growing_market', models.CharField(blank=True, max_length=50)),
                ('fastest_growing_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'unique_together': {('year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='TrailAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('landslide', 'Landslide'), ('snow', 'Snow'), ('flood', 'Flood'), ('bridge', 'Bridge Issue'), ('weather', 'Weather'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=20)),
                ('description', models.TextField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='api.trailsegment')),
            ],
        ),
        migrations.AddField(
            model_name='trailsegment',
            name='trail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='api.trailstatus'),
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('min_temp', models.IntegerField(help_text='Minimum temperature in celsius')),
                ('max_temp', models.IntegerField(help_text='Maximum temperature in celsius')),
                ('condition', models.CharField(max_length=50)),
                ('precipitation_chance', models.IntegerField(help_text='Precipitation chance in percentage')),
                ('sunrise', models.TimeField()),
                ('sunset', models.TimeField()),
            ],
            options={
                'unique_together': {('location', 'date')},
            },
        ),
        migrations.CreateModel(
            name='PermitFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality', models.CharField(choices=[('Foreign', 'Foreign'), ('SAARC', 'SAARC Countries'), ('Nepali', 'Nepali')], max_length=20)),
                ('amount', models.PositiveIntegerField()),
                ('currency', models.CharField(default='NPR', max_length=3)),
                ('permit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='api.permit')),
            ],
            options={
                'unique_together': {('permit', 'nationality')},
            },
        ),
        migrations.CreateModel(
            name='PermitOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permits', to='api.issuingoffice')),
                ('permit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuing_offices', to='api.permit')),
            ],
            options={
                'unique_together': {('permit', 'office')},
            },
        ),
        migrations.CreateModel(
            name='PurposeStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=50)),
                ('count', models.IntegerField()),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tourism_stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purpose_breakdown', to='api.tourismstat')),
            ],
            options={
                'unique_together': {('tourism_stat', 'purpose')},
            },
        ),
        migrations.CreateModel(
            name='NationalityStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality', models.CharField(max_length=50)),
                ('count', models.IntegerField()),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tourism_stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nationality_breakdown', to='api.tourismstat')),
            ],
            options={
                'unique_together': {('tourism_stat', 'nationality')},
            },
        ),
    ]
